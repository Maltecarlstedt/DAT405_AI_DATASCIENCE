from turtle import color
import matplotlib.pyplot as plt
import numpy as np

# The following data took about 35 minutes to retrieve so we pasted it in here when done. 
# Data from lab_6_q4_C.py
denoisedScores = [0.9607999920845032, 0.9573000073432922, 0.9490000009536743, 0.9488000273704529, 0.9467999935150146, 0.935699999332428, 0.9293000102043152, 0.9147999882698059, 0.8950999975204468, 
0.8751999735832214, 0.8416000008583069, 0.7843999862670898, 0.7139000296592712, 0.6373000144958496, 0.5228999853134155, 0.4041999876499176, 0.2937000095844269, 0.19779999554157257, 0.12690000236034393, 
0.10080000013113022]

# Data from lab_6_q4_C.py
seasonedScores = [0.9625999927520752, 0.9502000212669373, 0.9383999705314636, 0.9304999709129333, 0.9164000153541565, 0.8930000066757202, 0.8853999972343445, 0.8575000166893005, 
0.8281000256538391, 0.7900999784469604, 0.7608000040054321, 0.720300018787384, 0.6590999960899353, 0.5773000121116638, 0.49959999322891235, 0.4027999937534332, 0.31119999289512634, 
0.20839999616146088, 0.12039999663829803, 0.10109999775886536]

# Same noise points as in lab_6_q4_C.py
noise = np.linspace(0,1,20)

# Scatter the data
plt.scatter(noise, denoisedScores, c='red',label=color)
plt.scatter(noise, seasonedScores, c='blue',label =color)
plt.ylabel('True positive')
plt.xlabel('noise level')
plt.show()